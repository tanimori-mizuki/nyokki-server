package com.example.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class UserExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table users
     *
     * @mbggenerated Tue Dec 15 15:42:43 JST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table users
     *
     * @mbggenerated Tue Dec 15 15:42:43 JST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table users
     *
     * @mbggenerated Tue Dec 15 15:42:43 JST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table users
     *
     * @mbggenerated Tue Dec 15 15:42:43 JST 2020
     */
    public UserExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table users
     *
     * @mbggenerated Tue Dec 15 15:42:43 JST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table users
     *
     * @mbggenerated Tue Dec 15 15:42:43 JST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table users
     *
     * @mbggenerated Tue Dec 15 15:42:43 JST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table users
     *
     * @mbggenerated Tue Dec 15 15:42:43 JST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table users
     *
     * @mbggenerated Tue Dec 15 15:42:43 JST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table users
     *
     * @mbggenerated Tue Dec 15 15:42:43 JST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table users
     *
     * @mbggenerated Tue Dec 15 15:42:43 JST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table users
     *
     * @mbggenerated Tue Dec 15 15:42:43 JST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table users
     *
     * @mbggenerated Tue Dec 15 15:42:43 JST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table users
     *
     * @mbggenerated Tue Dec 15 15:42:43 JST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table users
     *
     * @mbggenerated Tue Dec 15 15:42:43 JST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andNameIsNull() {
            addCriterion("name is null");
            return (Criteria) this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("name is not null");
            return (Criteria) this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("name =", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("name <>", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("name >", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("name >=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("name <", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("name <=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("name like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("name not like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameIn(List<String> values) {
            addCriterion("name in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotIn(List<String> values) {
            addCriterion("name not in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("name between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("name not between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andGmailIsNull() {
            addCriterion("gmail is null");
            return (Criteria) this;
        }

        public Criteria andGmailIsNotNull() {
            addCriterion("gmail is not null");
            return (Criteria) this;
        }

        public Criteria andGmailEqualTo(String value) {
            addCriterion("gmail =", value, "gmail");
            return (Criteria) this;
        }

        public Criteria andGmailNotEqualTo(String value) {
            addCriterion("gmail <>", value, "gmail");
            return (Criteria) this;
        }

        public Criteria andGmailGreaterThan(String value) {
            addCriterion("gmail >", value, "gmail");
            return (Criteria) this;
        }

        public Criteria andGmailGreaterThanOrEqualTo(String value) {
            addCriterion("gmail >=", value, "gmail");
            return (Criteria) this;
        }

        public Criteria andGmailLessThan(String value) {
            addCriterion("gmail <", value, "gmail");
            return (Criteria) this;
        }

        public Criteria andGmailLessThanOrEqualTo(String value) {
            addCriterion("gmail <=", value, "gmail");
            return (Criteria) this;
        }

        public Criteria andGmailLike(String value) {
            addCriterion("gmail like", value, "gmail");
            return (Criteria) this;
        }

        public Criteria andGmailNotLike(String value) {
            addCriterion("gmail not like", value, "gmail");
            return (Criteria) this;
        }

        public Criteria andGmailIn(List<String> values) {
            addCriterion("gmail in", values, "gmail");
            return (Criteria) this;
        }

        public Criteria andGmailNotIn(List<String> values) {
            addCriterion("gmail not in", values, "gmail");
            return (Criteria) this;
        }

        public Criteria andGmailBetween(String value1, String value2) {
            addCriterion("gmail between", value1, value2, "gmail");
            return (Criteria) this;
        }

        public Criteria andGmailNotBetween(String value1, String value2) {
            addCriterion("gmail not between", value1, value2, "gmail");
            return (Criteria) this;
        }

        public Criteria andContinuationDaysIsNull() {
            addCriterion("continuation_days is null");
            return (Criteria) this;
        }

        public Criteria andContinuationDaysIsNotNull() {
            addCriterion("continuation_days is not null");
            return (Criteria) this;
        }

        public Criteria andContinuationDaysEqualTo(Integer value) {
            addCriterion("continuation_days =", value, "continuationDays");
            return (Criteria) this;
        }

        public Criteria andContinuationDaysNotEqualTo(Integer value) {
            addCriterion("continuation_days <>", value, "continuationDays");
            return (Criteria) this;
        }

        public Criteria andContinuationDaysGreaterThan(Integer value) {
            addCriterion("continuation_days >", value, "continuationDays");
            return (Criteria) this;
        }

        public Criteria andContinuationDaysGreaterThanOrEqualTo(Integer value) {
            addCriterion("continuation_days >=", value, "continuationDays");
            return (Criteria) this;
        }

        public Criteria andContinuationDaysLessThan(Integer value) {
            addCriterion("continuation_days <", value, "continuationDays");
            return (Criteria) this;
        }

        public Criteria andContinuationDaysLessThanOrEqualTo(Integer value) {
            addCriterion("continuation_days <=", value, "continuationDays");
            return (Criteria) this;
        }

        public Criteria andContinuationDaysIn(List<Integer> values) {
            addCriterion("continuation_days in", values, "continuationDays");
            return (Criteria) this;
        }

        public Criteria andContinuationDaysNotIn(List<Integer> values) {
            addCriterion("continuation_days not in", values, "continuationDays");
            return (Criteria) this;
        }

        public Criteria andContinuationDaysBetween(Integer value1, Integer value2) {
            addCriterion("continuation_days between", value1, value2, "continuationDays");
            return (Criteria) this;
        }

        public Criteria andContinuationDaysNotBetween(Integer value1, Integer value2) {
            addCriterion("continuation_days not between", value1, value2, "continuationDays");
            return (Criteria) this;
        }

        public Criteria andFirstdayContinuationIsNull() {
            addCriterion("firstday_continuation is null");
            return (Criteria) this;
        }

        public Criteria andFirstdayContinuationIsNotNull() {
            addCriterion("firstday_continuation is not null");
            return (Criteria) this;
        }

        public Criteria andFirstdayContinuationEqualTo(Date value) {
            addCriterionForJDBCDate("firstday_continuation =", value, "firstdayContinuation");
            return (Criteria) this;
        }

        public Criteria andFirstdayContinuationNotEqualTo(Date value) {
            addCriterionForJDBCDate("firstday_continuation <>", value, "firstdayContinuation");
            return (Criteria) this;
        }

        public Criteria andFirstdayContinuationGreaterThan(Date value) {
            addCriterionForJDBCDate("firstday_continuation >", value, "firstdayContinuation");
            return (Criteria) this;
        }

        public Criteria andFirstdayContinuationGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("firstday_continuation >=", value, "firstdayContinuation");
            return (Criteria) this;
        }

        public Criteria andFirstdayContinuationLessThan(Date value) {
            addCriterionForJDBCDate("firstday_continuation <", value, "firstdayContinuation");
            return (Criteria) this;
        }

        public Criteria andFirstdayContinuationLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("firstday_continuation <=", value, "firstdayContinuation");
            return (Criteria) this;
        }

        public Criteria andFirstdayContinuationIn(List<Date> values) {
            addCriterionForJDBCDate("firstday_continuation in", values, "firstdayContinuation");
            return (Criteria) this;
        }

        public Criteria andFirstdayContinuationNotIn(List<Date> values) {
            addCriterionForJDBCDate("firstday_continuation not in", values, "firstdayContinuation");
            return (Criteria) this;
        }

        public Criteria andFirstdayContinuationBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("firstday_continuation between", value1, value2, "firstdayContinuation");
            return (Criteria) this;
        }

        public Criteria andFirstdayContinuationNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("firstday_continuation not between", value1, value2, "firstdayContinuation");
            return (Criteria) this;
        }

        public Criteria andLevelAchievementIsNull() {
            addCriterion("level_achievement is null");
            return (Criteria) this;
        }

        public Criteria andLevelAchievementIsNotNull() {
            addCriterion("level_achievement is not null");
            return (Criteria) this;
        }

        public Criteria andLevelAchievementEqualTo(Integer value) {
            addCriterion("level_achievement =", value, "levelAchievement");
            return (Criteria) this;
        }

        public Criteria andLevelAchievementNotEqualTo(Integer value) {
            addCriterion("level_achievement <>", value, "levelAchievement");
            return (Criteria) this;
        }

        public Criteria andLevelAchievementGreaterThan(Integer value) {
            addCriterion("level_achievement >", value, "levelAchievement");
            return (Criteria) this;
        }

        public Criteria andLevelAchievementGreaterThanOrEqualTo(Integer value) {
            addCriterion("level_achievement >=", value, "levelAchievement");
            return (Criteria) this;
        }

        public Criteria andLevelAchievementLessThan(Integer value) {
            addCriterion("level_achievement <", value, "levelAchievement");
            return (Criteria) this;
        }

        public Criteria andLevelAchievementLessThanOrEqualTo(Integer value) {
            addCriterion("level_achievement <=", value, "levelAchievement");
            return (Criteria) this;
        }

        public Criteria andLevelAchievementIn(List<Integer> values) {
            addCriterion("level_achievement in", values, "levelAchievement");
            return (Criteria) this;
        }

        public Criteria andLevelAchievementNotIn(List<Integer> values) {
            addCriterion("level_achievement not in", values, "levelAchievement");
            return (Criteria) this;
        }

        public Criteria andLevelAchievementBetween(Integer value1, Integer value2) {
            addCriterion("level_achievement between", value1, value2, "levelAchievement");
            return (Criteria) this;
        }

        public Criteria andLevelAchievementNotBetween(Integer value1, Integer value2) {
            addCriterion("level_achievement not between", value1, value2, "levelAchievement");
            return (Criteria) this;
        }

        public Criteria andPhotoUrlIsNull() {
            addCriterion("photo_url is null");
            return (Criteria) this;
        }

        public Criteria andPhotoUrlIsNotNull() {
            addCriterion("photo_url is not null");
            return (Criteria) this;
        }

        public Criteria andPhotoUrlEqualTo(String value) {
            addCriterion("photo_url =", value, "photoUrl");
            return (Criteria) this;
        }

        public Criteria andPhotoUrlNotEqualTo(String value) {
            addCriterion("photo_url <>", value, "photoUrl");
            return (Criteria) this;
        }

        public Criteria andPhotoUrlGreaterThan(String value) {
            addCriterion("photo_url >", value, "photoUrl");
            return (Criteria) this;
        }

        public Criteria andPhotoUrlGreaterThanOrEqualTo(String value) {
            addCriterion("photo_url >=", value, "photoUrl");
            return (Criteria) this;
        }

        public Criteria andPhotoUrlLessThan(String value) {
            addCriterion("photo_url <", value, "photoUrl");
            return (Criteria) this;
        }

        public Criteria andPhotoUrlLessThanOrEqualTo(String value) {
            addCriterion("photo_url <=", value, "photoUrl");
            return (Criteria) this;
        }

        public Criteria andPhotoUrlLike(String value) {
            addCriterion("photo_url like", value, "photoUrl");
            return (Criteria) this;
        }

        public Criteria andPhotoUrlNotLike(String value) {
            addCriterion("photo_url not like", value, "photoUrl");
            return (Criteria) this;
        }

        public Criteria andPhotoUrlIn(List<String> values) {
            addCriterion("photo_url in", values, "photoUrl");
            return (Criteria) this;
        }

        public Criteria andPhotoUrlNotIn(List<String> values) {
            addCriterion("photo_url not in", values, "photoUrl");
            return (Criteria) this;
        }

        public Criteria andPhotoUrlBetween(String value1, String value2) {
            addCriterion("photo_url between", value1, value2, "photoUrl");
            return (Criteria) this;
        }

        public Criteria andPhotoUrlNotBetween(String value1, String value2) {
            addCriterion("photo_url not between", value1, value2, "photoUrl");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table users
     *
     * @mbggenerated do_not_delete_during_merge Tue Dec 15 15:42:43 JST 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table users
     *
     * @mbggenerated Tue Dec 15 15:42:43 JST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value) {
            super();
            this.condition = condition;
            this.value = value;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.betweenValue = true;
        }
    }
}